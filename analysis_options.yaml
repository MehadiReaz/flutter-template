# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:very_good_analysis/analysis_options.yaml

analyzer:
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/*.config.dart"
    - "**/generated/**"
    - "build/**"
  
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true

  errors:
    # Make certain warnings errors
    invalid_annotation_target: error
    missing_required_param: error
    missing_return: error
    
    # Allow some common patterns
    constant_identifier_names: ignore
    non_constant_identifier_names: ignore
    
    # Allow TODO comments in development
    todo: ignore

linter:
  rules:
    # Additional rules beyond very_good_analysis
    - always_use_package_imports
    - avoid_print
    - avoid_web_libraries_in_flutter
    - cancel_subscriptions
    - close_sinks
    - literal_only_boolean_expressions
    - no_logic_in_create_state
    - prefer_const_constructors
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - prefer_final_fields
    - prefer_final_in_for_each
    - prefer_final_locals
    - sized_box_for_whitespace
    - sort_constructors_first
    - use_build_context_synchronously
    - use_super_parameters
    
    # Disable some rules that might be too strict
    - avoid_catches_without_on_clauses: false
    - prefer_double_quotes: false
    - public_member_api_docs: false
